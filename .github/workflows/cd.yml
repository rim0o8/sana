name: CD

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

env:
  GCP_PROJECT_ID: langinsight
  REGION: asia-northeast1
  SERVICE_NAME: sana
  ARTIFACT_REGISTRY: langinsight
  WORKLOAD_IDENTITY_PROVIDER: projects/635356296636/locations/global/workloadIdentityPools/github/providers/github
  WORKLOAD_IDENTITY_SERVICE_ACCOUNT: github-actions@langinsight.iam.gserviceaccount.com
  SERVICE_ACCOUNT: sana-cr-invoker@langinsight.iam.gserviceaccount.com

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.WORKLOAD_IDENTITY_SERVICE_ACCOUNT }}

      - name: Configure Docker for GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: production
          push: true
          tags: |
            ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
            ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY }}/${{ env.SERVICE_NAME }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run services update ${{ env.SERVICE_NAME }} \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region=${{ env.REGION }} \
            --project=${{ env.GCP_PROJECT_ID }} \
            --service-account=${{ env.SERVICE_ACCOUNT }}

      - name: Notify deployment success
        if: success()
        run: |
          echo "‚úÖ Production deployment successful"
          echo "üåç Service URL: $(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)')"
